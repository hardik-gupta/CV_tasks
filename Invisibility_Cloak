import cv2
import numpy as np

cap=cv2.VideoCapture(0) #capturing the video. Either from a video file or a camera.

#Having a static background is better.
# 'for' loop is used so that we have multiple background images and it also reduces noise when averaged.  
bkgrnd=0
for _ in range(30): # The range here does not matter. It can be 60 or more. Idea is just to have a better image.
    ret,bkgrnd=cap.read()
bkgrnd=cv2.flip(bkgrnd,1)

while (cap.isOpened()):
    ret,img=cap.read()
    img=cv2.flip(img,1)
    #converting to HSV to account for changing lighting conditions.Hue covers for a long range of Color Red.
    hsv=cv2.cvtColor(img,cv2.COLOR_BGR2HSV)
    
    low_red=np.array([0,120,70])
    hi_red=np.array([10,255,255])
    mask1=cv2.inRange(hsv,low_red,hi_red)

    low_red=np.array([170,120,70])
    hi_red=np.array([180,255,255])
    mask2=cv2.inRange(hsv,low_red,hi_red)

    mask1=mask1+mask2

    mask1=cv2.morphologyEx(mask1,cv2.MORPH_OPEN,np.ones((3,3),np.uint8)) #Erosion followed by Dilating
    mask1=cv2.dilate(mask1,np.ones((7,7),np.uint8))
    mask2=cv2.bitwise_not(mask1) #Forming an inverted Mask

    image=cv2.bitwise_and(img,img,mask=mask2)
    background=cv2.bitwise_and(bkgrnd,bkgrnd,mask=mask1)

    output=cv2.addWeighted(image,1,background,1,0)
    cv2.imshow("Boomboclat",output)
    if cv2.waitKey(1) & 0xFF==ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
